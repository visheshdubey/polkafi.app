// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum TransactionType {
  CREDIT
  DEBIT
}

model User {
  id              String        @id @default(cuid())
  name            String?
  email           String?       @unique
  avatar          String?
  defaultCurrency String?       @default("USD")
  token           String?
  provider        String?
  credits         Int           @default(5)
  role            UserRole      @default(USER)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  Category        Category[]
  Transaction     Transaction[]
}

model Category {
  id          String        @id @default(cuid())
  name        String?
  user        User?         @relation(fields: [userId], references: [id])
  description String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userId      String?
  Transaction Transaction[]
}

model Transaction {
  id                    String               @id @default(cuid())
  particular            String?
  amount                BigInt
  currency              String?              @default("USD")
  user                  User                 @relation(fields: [userId], references: [id])
  textToStructuredJson  TextToStruturedJson? @relation(fields: [textToStruturedJsonId], references: [id])
  type                  TransactionType      @default(CREDIT)
  category              Category?            @relation(fields: [categoryId], references: [id])
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @updatedAt
  categoryId            String?
  textToStruturedJsonId String?
  userId                String
}

model Transcription {
  id                  String                @id @default(cuid())
  audioUrl            String?
  trxnText            String?
  rawWhisperResponse  Json?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  TextToStruturedJson TextToStruturedJson[]
}

model TextToStruturedJson {
  id                    String         @id @default(cuid())
  trxnText              String?
  transcription         Transcription? @relation(fields: [transcriptionId], references: [id])
  rawCompletionResponse Json?
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
  transcriptionId       String?
  Transaction           Transaction[]
}
